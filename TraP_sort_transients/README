Usage: python TraP_sort_transients.py <database> <dataset_id> <Release> <detection_threshold> <img_rms> <img_rms_scatter>

Requirements:
os, glob, sys, numpy, datetime, coords, math, matplotlib
Access to TraP databases

The coords module can be downloaded from here: https://pypi.python.org/pypi/astrolib.coords/0.39.5

This script conducts an approximate check to see if all the newly detected sources are actually transients rather than sources which are hovering around the detection threshold in the worst images. This is a temporary solution until the TraP is able to keep track of the best RMS measured in a given region - then this check will be more accurate and automated.

Instructions:

1. Run TraP on your restored.corr images using your normal job parameters. Note the database you are using and the dataset_id for entry later.
2. Create a folder to run this script in.
3. You are now ready to run this script. Go to ${your_working_folder} and run: 
   python TraP_source_overview.py <database> <dataset_id> <release> <detection_threshold> <img_rms> <img_rms_scatter>
   The release is the version of the pipeline that you are running. For release 1 you can use either a MonetDB database or a Postgres database, hence you need to specify '1m' for MonetDB and '1p' for Postgres. 
4. Input the detection threshold you are using for source extraction.
5. Also input the highest image average rms and rms scatter from your QC checks (TraP_QC_plots). This is a proxy for the worst rms you would expect in your images following the QC checks.
6. All transients with fluxes below the detection threshold in the worst image are considered to be likely spurious detections of a source that is hovering around the detection threshold. These are output into 2 files, one containing the multi-frequency information (possibly multiple lines per source) and a second containing only the unique sources.

If you are not running this script on heastro1, you will need to edit dump_transient_runcat_v1.py to point to your database.

Feedback on this script is welcome, please e-mail: b.a.rowlinson@uva.nl
